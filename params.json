{
  "name": "Javascript-sdk-design",
  "tagline": "Javascript SDK design guide extracted from work and personal experience",
  "body": "# JavaScript SDK Design Guide\r\n\r\n## Introduction\r\n\r\nThis guide gives you an introduction to developing a [JavaScript](https://developer.mozilla.org/en-US/docs/Web/JavaScript) SDK on desktop and mobile web in different platforms and browsers (<99.99% I might skip some browsers), for those developed for non-browser supports (hardware, embedded, node/io js) are excluded in this document and will be considered in the future.\r\n\r\nSince I didn't find out a better documentation for the [JavaScript](https://developer.mozilla.org/en-US/docs/Web/JavaScript) SDK,\r\nI'm here to gather and note down the knowledge of my personal experiences. **JavaScript-SDK-Design** is not just about SDK only, it's the connection between user and browser machine. The more native we write, the more we think, we do care about the performances and differences between platforms and browsers.\r\n\r\nFeel free to [edit](https://github.com/huei90/JavaScript-sdk-design/edit/master/README.md) or you can drop me suggestions on the [issue list](https://github.com/huei90/JavaScript-sdk-design/issues).\r\n\r\n<p align=\"right\">\r\n<i>READ IT</i> \r\n<a href=\"http://sdk-design.js.org\" target=\"_blank\">ONLINE</a> /\r\n<a href=\"https://gitprint.com/huei90/javascript-sdk-design/blob/master/README.md\" target=\"_blank\">PDF</a>\r\n<i>OR</i> \r\n<a href=\"http://ctt.ec/GyjRN\" title=\"Click to Tweet\">Tweet It</a> <br/>\r\n</p>\r\n\r\n<!--<hr/>-->\r\n<!--<p align=\"center\">-->\r\n<!--<a href=\"http://ctt.ec/GyjRN\" title=\"Click to Tweet\">Click to Tweet</a>-->\r\n<!--</p>-->\r\n<hr/>\r\n\r\n## Content\r\n* [What is SDK](#what-is-sdk)\r\n* [Design Philosophy](#design-philosophy)\r\n* [Scope](#scope)\r\n* [Include the SDK](#include-the-sdk)\r\n  * [Asynchronous Syntax](#asynchronous-syntax)\r\n  * [Traditional Syntax](#traditional-syntax)\r\n  * [Comparison](#comparison)\r\n  * [Problem of Asynchronous](#problem-of-asynchronous)\r\n  * [Others](#others)\r\n* [SDK Versioning](#sdk-versioning)\r\n* [Changelog Document](#changelog-document)\r\n* [Namespace](#namespace)\r\n* [Storage Mechanism](#storage-mechanism)\r\n  * [Cookie](#cookie)\r\n    * [Check Cookie Writable](#check-cookie-writable)\r\n    * [Check Third Party Cookie Writable](#check-third-party-cookie-writable)\r\n    * [Write Read Remove Cookie Code](#write-read-remove-cookie-code)\r\n  * [Session](#session)\r\n  * [LocalStorage](#localstorage)\r\n    * [Check LocalStorage Writable](#check-localstorage-writable)\r\n  * [Session Storage](#session-storage)\r\n    * [Check SessionStorage Writable](#check-sessionstorage-writable)\r\n* [Event](#event)\r\n  * [Document Ready](#document-ready)\r\n  * [Message Event](#message-event)\r\n  * [Orientation Change](#orientation-change)\r\n  * [Disable Scroll](#disable-scroll)\r\n* [Request](#request)\r\n  * [Image Beacon](#image-beacon)\r\n  * [Single Post](#single-post)\r\n  * [Multiple Post](#multiple-post)\r\n  * [Iframe](#iframe)\r\n  * [Script jsonp](#script-jsonp)\r\n  * [Navigator.sendBeacon()](#navigatorsendbeacon)\r\n  * [XMLHttpRequest](#xmlhttprequest)\r\n  * [Fragment Identifier](#fragment-identifier)\r\n  * [Maximum Number of Connection](#maximum-number-of-connection)\r\n* [Component of URI](#component-of-uri)\r\n * [Parsing URI](#parsing-uri)\r\n* [Debugging](#debugging)\r\n * [Simulating Multiple Domains](#simulating-multiple-domains)\r\n * [Developer Tools](#developer-tools)\r\n * [Console Logs](#console-logs)\r\n * [Debugging Proxy](#debugging-proxy)\r\n * [BrowserSync](#browsersync)\r\n* [Tips and Tricks](#tips-and-tricks)\r\n * [Piggyback](#piggyback)\r\n * [Page Visibility API](#page-visibility-api)\r\n * [Document Referrer](#document-referrer)\r\n * [Console Logs Polyfill](#console-logs-polyfill)\r\n * [EncodeURI or EncodeURIComponent](#encodeuri-or-encodeuricomponent)\r\n * [YOU MIGHT NOT NEED JQUERY](#you-might-not-need-jquery)\r\n * [You Don't Need jQuery](#you-dont-need-jquery)\r\n * [Load Script with Callback](#load-script-with-callback)\r\n * [Once Function](#once-function)\r\n * [Pixel Ratio Density](#pixel-ratio-density)\r\n * [Get Style Value](#get-style-value)\r\n * [Check if Element in Viewport](#check-if-element-in-viewport)\r\n * [Check if Element is Visible](#check-if-element-is-visible)\r\n * [Get Viewport Size](#get-viewport-size)\r\n* [WTF](#wtf)\r\n * [Misspelling Of Referrer](#misspelling-of-referrer)\r\n* [Template](#template)\r\n* [Book to Read](#booknice-to-read)\r\n* [Reference](#reference)\r\n\r\n## What is SDK\r\n\r\nI know it's very common, but it is.\r\n\r\n\"Short for **software development kit**, a programming package that enables a programmer to develop applications for a specific platform. Typically an SDK includes one or more APIs, programming tools, and documentation.\"\r\n\r\n## Design Philosophy\r\n\r\nIt depends on your purpose of your SDK service and usage,\r\nbut there must be **native**, **short**, **fast**, **clean**, **readable** and **testable**.\r\n\r\nWritten in native JavaScript code, compiler language like\r\nLivescript, Coffeescript, Typescript and others are **not** recommend.\r\nThere must be a better way to write your own JavaScript code in native faster than others.\r\n\r\nPlease **don't** involve jQuery in your SDK unless it's really important,\r\nyou can have other jQuery-like libraries, zepto.js, for the DOM manipulation.\r\nOr if you need the HTTP [ajax request](https://github.com/huei90/JavaScript-sdk-design#request), use another light library like `window.fetch`.\r\n\r\nOnce every SDK version released, make sure that it can be fitted into older and newer SDK version in the future.\r\nHence, remember to write your **Documentation** for your SDK, comment in your code, unit test and user scenario test.\r\n\r\n## Scope\r\n\r\n*Based on the book [Third-Party JavaScript](http://thirdpartyjs.com)*\r\n\r\nIn which case, you should design a JavaScript SDK for your application?\r\n\r\n1. [Embedded widgets](https://github.com/huei90/javascript-sdk-design/blob/master/SCOPE.md#embedded-widgets) - Small interactive applications embedded on the publisher's web page (Disqus, Google Maps, Facebook Widget)\r\n2. [Analytics and metrics](https://github.com/huei90/javascript-sdk-design/blob/master/SCOPE.md#analytics-and-metrics) - For gathering intelligence about visitors and how they interact with the publisher's website (GA, Flurry, Mixpanel)\r\n3. [Web service API wrappers](https://github.com/huei90/javascript-sdk-design/blob/master/SCOPE.md#web-service-api-wrappers) - For developing client-side applications that communicate with external web services. (Facebook Graph API)\r\n\r\nIn what case we should use SDK in JavaScript environment? [Suggest one](https://github.com/huei90/JavaScript-sdk-design/edit/master/README.md).\r\n\r\n## Include the SDK\r\n\r\nYou are suggested to use **Asynchronous Syntax** for your script loaded.\r\nWe want to optimize the user experience on the website as we don't want our SDK library to interfere the main web loaded.\r\n\r\n### Asynchronous Syntax\r\n\r\n```html\r\n<script>\r\n  (function () {\r\n    var s = document.createElement('script');\r\n    s.type = 'text/javascript';\r\n    s.async = true;\r\n    s.src = 'http://xxx.com/sdk.js';\r\n    var x = document.getElementsByTagName('script')[0];\r\n    x.parentNode.insertBefore(s, x);\r\n  })();\r\n</script>\r\n```\r\n\r\nTarget on the modern browser, you can use `async`.\r\n\r\n```html\r\n<script async src=\"http://xxx.com/sdk.js\"></script>\r\n```\r\n\r\n### Traditional Syntax\r\n\r\n```html\r\n<script type=\"text/javascript\" src=\"http://xxx.com/sdk.js\"></script>\r\n```\r\n\r\n### Comparison\r\n\r\nHere's the simple graph to show the differentiate between Asynchronous and Traditional Syntax.\r\n\r\nAsynchronous:\r\n```\r\n |----A-----|\r\n    |-----B-----------|\r\n        |-------C------|\r\n```\r\n\r\nSynchronous:\r\n```\r\n|----A-----||-----B-----------||-------C------|\r\n```\r\n\r\nAsynchronous and deferred JavaScript execution explained\r\n\r\n<img src=\"http://peter.sh/wp-content/uploads/2010/09/execution2.jpg\"/>\r\n\r\n\r\n\r\n> _https://developers.google.com/speed/docs/insights/BlockingJS_ <br/>\r\n> You should avoid and minimize the use of blocking JavaScript, especially external scripts that must be fetched before they can be executed. Scripts that are necessary to render page content can be inlined to avoid extra network requests, however the inlined content needs to be small and must execute quickly to deliver good performance. Scripts that are not critical to initial render should be made asynchronous or deferred until after the first render.\r\n\r\n### Problem of Asynchronous\r\n\r\nWhen you are using Asynchronous,\r\nyou cannot execute your SDK function which script written within the page.\r\n\r\n```js\r\n<script>\r\n  (function () {\r\n    var s = document.createElement('script');\r\n    s.type = 'text/javascript';\r\n    s.async = true;\r\n    s.src = 'http://xxx.com/sdk.js';\r\n    var x = document.getElementsByTagName('script')[0];\r\n    x.parentNode.insertBefore(s, x);\r\n  })();\r\n\r\n  // execute your script immediately here\r\n  SDKName('some arguments');\r\n</script>\r\n```\r\n\r\nThe result will lead to undefined because the `SDKName()` execute before the script loaded,\r\ntherefore we should do some tricks and make sure the script execute successfully.\r\nThe event will store in the `SDKName.q` queue array,\r\nyour SDK should handle and execute `SDKName.q` and reinitial the namespace `SDKName`.\r\n\r\n```js\r\n<script>\r\n  (function () {\r\n    // add a queue event here\r\n    SDKName = SDKName || function () {\r\n      (SDKName.q = SDKName.q || []).push(arguments);\r\n    };\r\n    var s = document.createElement('script');\r\n    s.type = 'text/javascript';\r\n    s.async = true;\r\n    s.src = 'http://xxx.com/sdk.js';\r\n    var x = document.getElementsByTagName('script')[0];\r\n    x.parentNode.insertBefore(s, x);\r\n  })();\r\n\r\n  // execute your script immediately here\r\n  SDKName('some arguments');\r\n</script>\r\n```\r\n\r\n**Or** using [].push\r\n\r\n```js\r\n<script>\r\n  (function () {\r\n    // add a queue event here\r\n    SDKName = window.SDKName || (window.SDKName = []);\r\n    var s = document.createElement('script');\r\n    s.type = 'text/javascript';\r\n    s.async = true;\r\n    s.src = 'http://xxx.com/sdk.js';\r\n    var x = document.getElementsByTagName('script')[0];\r\n    x.parentNode.insertBefore(s, x);\r\n  })();\r\n\r\n  // execute your script immediately here\r\n  SDKName.push(['some arguments']);\r\n</script>\r\n```\r\n\r\n### Others\r\n\r\nThere are other different ways to include a script\r\n\r\n**Import in ES2015**\r\n\r\n```js\r\nimport \"your-sdk\";\r\n```\r\n\r\n**Modular include a Script**\r\n\r\nFor full source code, see this awesome tutorial. [Loading JavaScript Modules](https://libraryinstitute.wordpress.com/2010/12/01/loading-javascript-modules/)\r\n\r\n```js\r\nmodule('sdk.js',['sdk-track.js', 'sdk-beacon.js'],function(track, beacon) {\r\n  // sdk definitions, split into local and global/exported definitions\r\n  // local definitions\r\n  // exports\r\n});\r\n\r\n// you should contain this \"module\" method\r\n(function () {\r\n \r\n  var modules = {}; // private record of module data\r\n \r\n  // modules are functions with additional information\r\n  function module(name,imports,mod) {\r\n \r\n    // record module information\r\n    window.console.log('found module '+name);\r\n    modules[name] = {name:name, imports: imports, mod: mod};\r\n \r\n    // trigger loading of import dependencies\r\n    for (var imp in imports) loadModule(imports[imp]);\r\n \r\n    // check whether this was the last module to be loaded\r\n    // in a given dependency group\r\n    loadedModule(name);\r\n  }\r\n  \r\n  // function loadModule\r\n  // function loadedModule\r\n  \r\n  window.module = module;\r\n})();\r\n```\r\n\r\n## SDK Versioning\r\n\r\nPlease avoid using your special case for version like `brand-v<timestamp>.js` `brand-v<datetime>.js` `brand-v1-v2.js`,\r\nit may cause the developer who use the SDK on confusing which is the latest version.\r\n\r\nUse [Semantic Versioning](http://semver.org) to define your SDK Version in the form \"MAJOR.MINOR.PATCH\".\r\nVersion in `v1.0.0` `v1.5.0` `v2.0.0` is easier for them to trace and search for the changelog documentation.\r\n\r\nNormally, we can have different ways to state the SDK version, it depends on your service and design.\r\n\r\nUsing Query String path.\r\n```\r\nhttp://xxx.com/sdk.js?v=1.0.0\r\n```\r\n\r\nUsing the Folder Naming.\r\n```\r\nhttp://xxx.com/v1.0.0/sdk.js\r\n```\r\n\r\nUsing hostname (subdomain).\r\n```\r\nhttp://v1.xxx.com/sdk.js\r\n```\r\n\r\nFor the further development, you are advised to use  `stable` `unstable` `alpha` `latest` `experimental` version.\r\n```\r\nhttp://xxx.com/sdk-stable.js\r\nhttp://xxx.com/sdk-unstable.js\r\nhttp://xxx.com/sdk-alpha.js\r\nhttp://xxx.com/sdk-latest.js\r\nhttp://xxx.com/sdk-experimental.js\r\n```\r\n\r\n## Changelog Document\r\n\r\nYou should notice that your SDK user will not know if you upgrade your SDK without announcement.\r\nRemember to write a changelog to document your major, minor and even bug fix change.\r\nIt will be a good developer experience if we can trace the changing API for the SDK. - [Keep a Changelog](http://keepachangelog.com) ([Github Repo](https://github.com/olivierlacan/keep-a-changelog))\r\n\r\nEach version should have:\r\n\r\n```\r\n[Added] for new features.\r\n[Changed] for changes in existing functionality.\r\n[Deprecated] for once-stable features removed in upcoming releases.\r\n[Removed] for deprecated features removed in this release.\r\n[Fixed] for any bug fixes.\r\n[Security] to invite users to upgrade in case of vulnerabilities.\r\n```\r\n\r\nIn addition, [commit-message-emoji](https://github.com/dannyfritz/commit-message-emoji) uses emoji to explain the commit's changes itself.\r\n\r\n## Namespace\r\n\r\nYou should not define more than one global namespace in your SDK and\r\nprevent using the common word for your namespace to avoid collision with other libraries.\r\n\r\nOn your SDK mainland, you should use `(function () { ... })()` to wrap all your source.\r\n\r\nThis is an increasingly common practice, employed by many popular JavaScript libraries (jQuery, Node.js, etc.). This technique creates a closure around the entire contents of the file which, perhaps most importantly, creates a private namespace and thereby helps avoid potential name clashes between different JavaScript modules and libraries. [#](http://www.toptal.com/javascript/interview-questions)\r\n\r\nTo avoid **namespace collision**\r\n\r\nLearning this from Google Analytics, you can define your namespace by changing the value `ga`\r\n\r\n```js\r\n(function(i,s,o,g,r,a,m){i['GoogleAnalyticsObject']=r;i[r]=i[r]||function(){\r\n(i[r].q=i[r].q||[]).push(arguments)},i[r].l=1*new Date();a=s.createElement(o),\r\nm=s.getElementsByTagName(o)[0];a.async=1;a.src=g;m.parentNode.insertBefore(a,m)\r\n})(window,document,'script','//www.google-analytics.com/analytics.js','ga');\r\n```\r\n\r\nFrom [OpenX experience](http://docs.openx.com/ad_server/adtags_namespace.html), support a parameter to request the namespace.\r\n\r\n```html\r\n<script src=\"http://your_domain/sdk?namespace=yourcompany\"></script>\r\n```\r\n\r\n## Storage Mechanism\r\n\r\n### Cookie\r\n\r\nThe domain scope of using cookie is quite complex while involving the `subdomain` and `path`.\r\n\r\nFor `path=/`,\r\nyou have a cookie `first=value1` in domain `http://github.com`,\r\nanother cookie `second=value2` in domain `http://sub.github.com`\r\n\r\n|  | http://github.com | http://sub.github.com\r\n|:---------:|:------------:|:------------:\r\nfirst=value1\t | ✓ | ✓\r\nsecond=value2 | ✘ | ✓\r\n\r\nYou have a cookie `first=value1` in domain `http://github.com`,\r\ncookie `second=value2` in domain path `http://github.com/path1`\r\nand cookie `third=value3` in domain `http://sub.github.com`,\r\n\r\n\r\n|  | http://github.com | http://github.com/path1 | http://sub.github.com\r\n|:---------:|:------------:|:------------:|:------------:\r\nfirst=value1\t | ✓ | ✓ | ✓\r\nsecond=value2 | ✘ | ✓ | ✘\r\nthird=value3 | ✘ | ✘ | ✓\r\n\r\n#### Check Cookie Writable\r\n\r\nGiven a domain (Default as current hostname), check whether the cookie is writable.\r\n\r\n```js\r\nvar checkCookieWritable = function(domain) {\r\n    try {\r\n        // Create cookie\r\n        document.cookie = 'cookietest=1' + (domain ? '; domain=' + domain : '');\r\n        var ret = document.cookie.indexOf('cookietest=') != -1;\r\n        // Delete cookie\r\n        document.cookie = 'cookietest=1; expires=Thu, 01-Jan-1970 00:00:01 GMT' + (domain ? '; domain=' + domain : '');\r\n        return ret;\r\n    } catch (e) {\r\n        return false;\r\n    }\r\n};\r\n```\r\n\r\n#### Check Third Party Cookie Writable\r\n\r\nIt's impossible to check only using client side JavaScript, you need a server to do that. ([Example](https://dl.dropboxusercontent.com/u/105727/web/3rd/third-party-cookies.html))\r\n\r\n#### Write Read Remove Cookie Code\r\n\r\nSnippet Code for write/read/remove cookie script.\r\n\r\n```js\r\nvar cookie = {\r\n    write: function(name, value, days, domain, path) {\r\n        var date = new Date();\r\n        days = days || 730; // two years\r\n        path = path || '/';\r\n        date.setTime(date.getTime() + (days * 24 * 60 * 60 * 1000));\r\n        var expires = '; expires=' + date.toGMTString();\r\n        var cookieValue = name + '=' + value + expires + '; path=' + path;\r\n        if (domain) {\r\n            cookieValue += '; domain=' + domain;\r\n        }\r\n        document.cookie = cookieValue;\r\n    },\r\n    read: function(name) {\r\n        var allCookie = '' + document.cookie;\r\n        var index = allCookie.indexOf(name);\r\n        if (name === undefined || name === '' || index === -1) return '';\r\n        var ind1 = allCookie.indexOf(';', index);\r\n        if (ind1 == -1) ind1 = allCookie.length;\r\n        return unescape(allCookie.substring(index + name.length + 1, ind1));\r\n    },\r\n    remove: function(name) {\r\n        if (this.read(name)) {\r\n            this.write(name, '', -1, '/');\r\n        }\r\n    }\r\n};\r\n```\r\n### Session\r\n\r\nIt's important to know that JavaScript is **not possible** to write Session,\r\nplease refer to the server side team to implement Session.\r\n\r\nA page session lasts for as long as the browser is open and survives over page reloads and restores. Opening a page in a new tab or window will cause a new session to be initiated.\r\n\r\n### LocalStorage\r\n\r\nStores data with no expiration date, storage limit is far larger (at least 5MB) and\r\ninformation is never transferred to the server.\r\n\r\nIt's good to know that each localStorage from `http` and `https` in the same domain aren't shared.\r\nYou can create an iframe inside the website and use `postMessage` to pass the value to others. [HOW TO?](http://stackoverflow.com/questions/10502469/is-there-any-workaround-to-make-use-of-html5-localstorage-on-both-http-and-https)\r\n\r\n#### Check LocalStorage Writable\r\n\r\nwindow.localStorage is not support in every browser, SDK should check available before using it.\r\n\r\n```js\r\nvar testCanLocalStorage = function() {\r\n   var mod = 'modernizr';\r\n   try {\r\n       localStorage.setItem(mod, mod);\r\n       localStorage.removeItem(mod);\r\n       return true;\r\n   } catch (e) {\r\n       return false;\r\n   }\r\n};\r\n```\r\n\r\n### Session Storage\r\n\r\nStores data for one session (data is lost when the tab is closed).\r\n\r\n### Check SessionStorage Writable\r\n\r\n```js\r\nvar checkCanSessionStorage = function() {\r\n  var mod = 'modernizr';\r\n  try {\r\n    sessionStorage.setItem(mod, mod);\r\n    sessionStorage.removeItem(mod);\r\n    return true;\r\n  } catch (e) {\r\n    return false;\r\n  }\r\n}\r\n```\r\n\r\n## Event\r\n\r\nIn client browser, there are events `load` `unload` `on` `off` `bind` .... Here's some [polyfills](https://remysharp.com/2010/10/08/what-is-a-polyfill) for you to handle all different platforms.\r\n\r\n### Document Ready\r\n\r\nPlease do make sure that the entire page is finished loading(ready) before starting execution the SDK functions.\r\n\r\n```js\r\n// handle IE8+\r\nfunction ready (fn) {\r\n    if (document.readyState != 'loading') {\r\n        fn();\r\n    } else if (window.addEventListener) {\r\n        // window.addEventListener('load', fn);\r\n        window.addEventListener('DOMContentLoaded', fn);\r\n    } else {\r\n        window.attachEvent('onreadystatechange', function() {\r\n            if (document.readyState != 'loading')\r\n                fn();\r\n            });\r\n    }\r\n}\r\n```\r\n\r\n> **DOMContentLoaded** -  fired when the document has been completely loaded and parsed, without waiting for stylesheets, images, and subframes to finish loading\r\n\r\n> **load** event can be used to detect a fully-loaded page\r\n\r\n> Information from JS Tip - https://github.com/loverajoel/jstips/blob/gh-pages/_posts/en/2016-02-15-detect-document-ready-in-pure-js.md\r\n\r\n### Message Event\r\n\r\nIt's about the cross-origin communication between iframe and window, read the [API documentation](https://developer.mozilla.org/en-US/docs/Web/API/Window/postMessage).\r\n\r\n```js\r\n// in the iframe\r\nparent.postMessage(\"Hello\"); // string\r\n\r\n// ==========================================\r\n\r\n// in the iframe's parent\r\n// Create IE + others compatible event handler\r\nvar eventMethod = window.addEventListener ? \"addEventListener\" : \"attachEvent\";\r\nvar eventer = window[eventMethod];\r\nvar messageEvent = eventMethod == \"attachEvent\" ? \"onmessage\" : \"message\";\r\n\r\n// Listen to message from child window\r\neventer(messageEvent,function(e) {\r\n  // e.origin , check the message origin\r\n  console.log('parent received message!:  ',e.data);\r\n},false);\r\n```\r\n\r\nThe post message data should be **String**, for more advanced used in json, use **JSON String**. Although the modern browser do support [Structured Clone Algorithm](https://developer.mozilla.org/en-US/docs/Web/API/Web_Workers_API/Structured_clone_algorithm) on the parameter, but not the 100% browser.\r\n\r\n### Orientation Change\r\n\r\nDetect device orientation change\r\n\r\n```js\r\nwindow.addEventListener('orientationchange', fn);\r\n```\r\n\r\nGet Orientation Rotate Degree\r\n\r\n```js\r\nwindow.orientation; // => 90, -90, 0\r\n```\r\n\r\nScreen portrait-primary, portrait-secondary, landscape-primary, landscape-secondary (Experimental)\r\n\r\n```js\r\n// https://developer.mozilla.org/en-US/docs/Web/API/Screen/orientation\r\nvar orientation = screen.orientation || screen.mozOrientation || screen.msOrientation;\r\n```\r\n\r\n### Disable Scroll\r\n\r\nIn web page, use CSS style `overflow: hidden`, in some mobile web, this css doesn't work, use javascript event.\r\n\r\n```js\r\ndocument.addEventListener('touchstart', function(e){ e.preventDefault(); }); // prevent scroll\r\n// or \r\ndocument.body.addEventListener('touchstart', function(e){ e.preventDefault(); }); // prevent scroll\r\n// use move if you need some touch event\r\ndocument.addEventListener('touchmove', function(e){ e.preventDefault(); }); // prevent scroll\r\n```\r\n\r\n## Request\r\n\r\nThe communication between our SDK and Server is using Ajax Request,\r\nas we know we can use jQuery ajax http request to communicate with Server,\r\nbut there's a better solution to implement it.\r\n\r\n### Image Beacon\r\n\r\nUse the Image Beacon to ask the browser to perform a method GET Request to get an Image.\r\n\r\n*Remember to add timestamp (Cache Buster) to prevent caching in browser.*\r\n\r\n```js\r\n(new Image()).src = 'http://xxxxx.com/collect?id=1111';\r\n```\r\n\r\nSome notice for GET Query String, there is the limit of length which is 2048(Basically It depends on different browser and server). You should do some tricks to handle if exceed length limit.\r\n\r\n```js\r\nif (length > 2048) {\r\n    // do Multiple Post (form)\r\n} else {\r\n    // do Image Beacon\r\n}\r\n```\r\n\r\nYou may have the problem on `encodeURI` or `encodeURIComponent`, it's better if you understand them. [See below](#encodeuri-or-encodeuricomponent).\r\n\r\nFor the image load **success/error callback**\r\n\r\n```js\r\nvar img = new Image();\r\nimg.src = 'http://xxxxx.com/collect?id=1111';\r\nimg.onload = successCallback;\r\nimg.onerror = errorCallback;\r\n```\r\n\r\n### Single Post\r\n\r\nUse the native form element method POST to send a key value.\r\n\r\n```js\r\nvar form = document.createElement('form');\r\nvar input = document.createElement('input');\r\n\r\nform.style.display = 'none';\r\nform.setAttribute('method', 'POST');\r\nform.setAttribute('action', 'http://xxxx.com/track');\r\n\r\ninput.name = 'username';\r\ninput.value = 'attacker';\r\n\r\nform.appendChild(input);\r\ndocument.getElementsByTagName('body')[0].appendChild(form);\r\n\r\nform.submit();\r\n```\r\n\r\n### Multiple Post\r\n\r\nThe Service is often complex, we need to send more data through method POST.\r\n\r\n```js\r\nfunction requestWithoutAjax( url, params, method ){\r\n\r\n    params = params || {};\r\n    method = method || \"post\";\r\n\r\n    // function to remove the iframe\r\n    var removeIframe = function( iframe ){\r\n        iframe.parentElement.removeChild(iframe);\r\n    };\r\n\r\n    // make a iframe...\r\n    var iframe = document.createElement('iframe');\r\n    iframe.style.display = 'none';\r\n\r\n    iframe.onload = function(){\r\n        var iframeDoc = this.contentWindow.document;\r\n\r\n        // Make a invisible form\r\n        var form = iframeDoc.createElement('form');\r\n        form.method = method;\r\n        form.action = url;\r\n        iframeDoc.body.appendChild(form);\r\n\r\n        // pass the parameters\r\n        for( var name in params ){\r\n            var input = iframeDoc.createElement('input');\r\n            input.type = 'hidden';\r\n            input.name = name;\r\n            input.value = params[name];\r\n            form.appendChild(input);\r\n        }\r\n\r\n        form.submit();\r\n        // remove the iframe\r\n        setTimeout( function(){\r\n            removeIframe(iframe);\r\n        }, 500);\r\n    };\r\n\r\n    document.body.appendChild(iframe);\r\n}\r\n```\r\n```js\r\nrequestWithoutAjax('url/to', { id: 2, price: 2.5, lastname: 'Gamez'});\r\n```\r\n\r\n### Iframe\r\n\r\nWhen you need to generate a content within the page, you can use iframe to embed your html.\r\n\r\n```js\r\nvar iframe = document.createElement('iframe');\r\nvar body = document.getElementsByTagName('body')[0];\r\n\r\niframe.style.display = 'none';\r\niframe.src = 'http://xxxx.com/page';\r\niframe.onreadystatechange = function () {\r\n    if (iframe.readyState !== 'complete') {\r\n        return;\r\n    }\r\n};\r\niframe.onload = loadCallback;\r\n\r\nbody.appendChild(iframe);\r\n```\r\n\r\n**Remove extra margin from INSIDE an iframe**\r\n\r\n```html\r\n<iframe src=\"...\"\r\n marginwidth=\"0\"\r\n marginheight=\"0\"\r\n hspace=\"0\"\r\n vspace=\"0\"\r\n frameborder=\"0\"\r\n scrolling=\"no\"></iframe>\r\n```\r\n\r\n**Putting html content into an iframe**\r\n\r\n```html\r\n<iframe id=\"iframe\"></iframe>\r\n\r\n<script>\r\n  var html_string= \"content <script>alert(location.href);</script>\";\r\n  document.getElementById('iframe').src = \"data:text/html;charset=utf-8,\" + escape(html_string);\r\n  // alert data:text/html;charset=utf-8.....\r\n  // access cookie get ERROR\r\n  \r\n  var doc = document.getElementById('iframe').contentWindow.document;\r\n  doc.open();\r\n  doc.write('<body>Test<script>alert(location.href);</script></body>');\r\n  doc.close();\r\n  // alert \"top window url\"\r\n  \r\n  var iframe = document.createElement('iframe');\r\n  iframe.src = 'javascript:;\\'' + encodeURI('<html><body><script>alert(location.href);</body></html>') + '\\'';\r\n  // iframe.src = 'javascript:;\"' + encodeURI((html_tag).replace(/\\\"/g, '\\\\\\\"')) + '\"';\r\n  document.body.appendChild(iframe);\r\n  // alert \"about:blank\"\r\n</script>\r\n```\r\n\r\n### Script jsonp\r\n\r\nThis is the case that your server needs to response JavaScript code and let the client browser execute it.\r\nJust include the JS script link.\r\n\r\n```js\r\n  (function () {\r\n    var s = document.createElement('script');\r\n    s.type = 'text/javascript';\r\n    s.async = true;\r\n    s.src = '/yourscript?some=parameter&callback=jsonpCallback';\r\n    var x = document.getElementsByTagName('script')[0];\r\n    x.parentNode.insertBefore(s, x);\r\n  })();\r\n```\r\n\r\nKnow more about jsonp\r\n\r\n1. JSONP only works in GET HTTP request.\r\n2. JSONP lacks error handling, means you cannot detect case in response status code 404, 500 and so on.\r\n3. JSONP requests are always asynchronous.\r\n4. Beware of CSRF attack.\r\n5. Cross domain communication. Script response side (server-side) don't need to care about CORS.\r\n\r\n### Navigator.sendBeacon()\r\n\r\nLook at the [documentation](https://developer.mozilla.org/en-US/docs/Web/API/Navigator/sendBeacon).\r\n\r\n> This method addresses the needs of analytics and diagnostics code that typically attempt to send data to a web server prior to the unloading of the document. Sending the data any sooner may result in a missed opportunity to gather data. However, ensuring that the data has been sent during the unloading of a document is something that has traditionally been difficult for developers.\r\n\r\nSend POST beacon through the API. It's cool.\r\n\r\n```js\r\nnavigator.sendBeacon(\"/log\", analyticsData);\r\n```\r\n\r\n### XMLHttpRequest\r\n\r\nWriting XMLHttpRequest is not a good idea. I assume that you don't want to waste time on battling with IE or other browsers. Here's some polyfills or code you can try\r\n\r\n1. [window.fetch](https://github.com/github/fetch) - A window.fetch JavaScript polyfill.\r\n2. [got](https://github.com/sindresorhus/got) - Simplified HTTP/HTTPS requests\r\n3. [microjs](http://microjs.com/#ajax) - list of ajax lib\r\n4. more\r\n\r\n### Fragment Identifier\r\n\r\nAlso known as hash mark `#`. Remember that request with hash mark at the end is not pass within http request.\r\n\r\nFor example, you are in the page `http://github.com/awesome#huei90`\r\n\r\n```js\r\n// Sending a request with a parameter url which contains current url\r\n(new Image()).src = 'http://yourrequest.com?url=http://github.com/awesome#huei90';\r\n\r\n// actual request will be without #\r\n(new Image()).src = 'http://yourrequest.com?url=http://github.com/awesome';\r\n\r\n// Solved, encodeURIComponent(url);\r\n(new Image()).src = 'http://yourrequest.com?url=' + encodeURIComponent('http://github.com/awesome#huei90');\r\n```\r\n\r\n### Maximum Number of Connection\r\n\r\nCheck the maximum number of browser's request connection. [browserscope](http://www.browserscope.org/?category=network&v=top)\r\n\r\n<h2 align=\"center\">\r\n <img src=\"https://cloud.githubusercontent.com/assets/2560096/9082891/ac4dc26e-3b99-11e5-8178-606270a801c4.png\" alt=\"max number of connection\"/>\r\n</h2>\r\n\r\n## Component of URI\r\n\r\nIt's important to know if your SDK needs to parse the location url.\r\n```\r\n                         authority\r\n                   __________|_________\r\n                  /                    \\\r\n              userinfo                host                          resource\r\n               __|___                ___|___                 __________|___________\r\n              /      \\              /       \\               /                      \\\r\n         username  password     hostname    port     path & segment      query   fragment\r\n           __|___   __|__    ______|______   |   __________|_________   ____|____   |\r\n          /      \\ /     \\  /             \\ / \\ /                    \\ /         \\ / \\\r\n    foo://username:password@www.example.com:123/hello/world/there.html?name=ferret#foo\r\n    \\_/                     \\ / \\       \\ /    \\__________/ \\     \\__/\r\n     |                       |   \\       |           |       \\      |\r\n  scheme               subdomain  \\     tld      directory    \\   suffix\r\n                                   \\____/                      \\___/\r\n                                      |                          |\r\n                                    domain                   filename\r\n```\r\n\r\n### Parsing URI\r\n\r\nHere's a simplest by using the native URL() Interface but it doesn't support all the browsers also [not standard yet](https://developer.mozilla.org/en-US/docs/Web/API/Window/URL).\r\n\r\n```js\r\nvar parser = new URL('http://github.com/huei90');\r\nparser.hostname; // => \"github.com\"\r\n```\r\n\r\nFor the browser which doesn't have the URL() Interface, try DOM createElement('a').\r\n\r\n```js\r\nvar parser = document.createElement('a');\r\nparser.href = \"http://github.com/huei90\";\r\nparser.hostname; // => \"github.com\"\r\n```\r\n\r\n## Debugging\r\n\r\n### Simulating Multiple Domains\r\n\r\nYou don't need to register different domain names to simulate multiple domain, you can just edit your operating system's hosts file.\r\n\r\n```shell\r\n$ sudo vim /etc/hosts\r\n```\r\n\r\nAdd the following entries\r\n\r\n```shell\r\n# refer to localhost\r\n127.0.0.1 publisher.net\r\n127.0.0.1 sdk.net\r\n```\r\n\r\nThen you can access the page `http://publisher.net` and `http://sdk.net`\r\n\r\n### Developer Tools\r\n\r\nUse the web debugging tools from browser vendors when debugging your SDK JavaScript code - `Chrome Developer Tools` `Safari Developer Tools` `Firebug`. Developer tools also short for DevTools.\r\n\r\n> The DevTools provide web developers deep access into the internals of the browser and their web application. Use the DevTools to efficiently track down layout issues, set JavaScript breakpoints, and get insights for code optimization.\r\n\r\n### Console Logs\r\n\r\nFor testing expected output text and other general debugging, `Console Logs` can be used throught the browser API `console.log()`. There are various typeways to format and output your messages, find out more [Console API](https://developer.mozilla.org/en/docs/Web/API/console).\r\n\r\n![screen shot 2015-06-15 at 3 50 23 pm](https://cloud.githubusercontent.com/assets/2560096/8155377/411fb24a-1376-11e5-98da-f71f8ed29bcd.png)\r\n\r\n### Debugging Proxy\r\n\r\nSometimes debugging proxy will give you a hand on testing your SDK. Debug traffic, modify cookies, headers, cache, edit http request/response, SSL Proxying, ajax debugging and more.\r\n\r\nHere's some software you can try\r\n- [FiddlerCore](http://www.telerik.com/fiddler/fiddlercore)\r\n- [Charles](http://www.charlesproxy.com)\r\n- [Cellist](https://itunes.apple.com/tw/app/cellist-http-debugging-proxy/id897814548?l=zh&mt=12)\r\n\r\n### BrowserSync\r\n\r\n[BrowserSync](http://www.browsersync.io) makes your tweaking and testing faster by synchronising file changes and interactions across multiple devices. It’s wicked-fast and totally free.\r\n\r\nIt really helps a lot if you need to test your SDK result in multiple cross devices. Try it =)\r\n\r\n## Tips and Tricks\r\n\r\n### Piggyback\r\n\r\nSometimes, we don't want our developers include all the SDK source,\r\nwe just need to do a simple 1x1 pixel request (for example: return a request when landing on thank you/last page). All we need to do is ask the developer to include an image file with our url link.\r\n\r\n```html\r\n<img height=\"1\" width=\"1\" alt=\"\" style=\"display:none\" src=\"https://yourUrlLink.com/t?timestamp=1234567890&type=page1&currency=USD&noscript=1\" />\r\n```\r\n\r\n### Page Visibility API\r\n\r\nSometimes, your SDK wants to detect if the user has your page in focus. Try the polyfills  [visibly.js](https://github.com/addyosmani/visibly.js) and [visibilityjs](https://github.com/ai/visibilityjs).\r\n\r\n### Document Referrer\r\n\r\nUse `document.referrer` to get the url of current previous page. But remember that this referrer is \"Browser Referrer\" not the \"Human Known Referrer\". If you click the **browser back button**, for example pageA -> pageB -> pageC -> (back button) pageB, current pageB's referrer is pageA, not pageC.\r\n\r\n### Console Logs Polyfill\r\n\r\nIt's not a real polyfill, just make sure that calling `console.log` API doesn't throw error event to client side.\r\n\r\n```js\r\nif (typeof console === \"undefined\") {\r\n    var f = function() {};\r\n    console = {\r\n        log: f,\r\n        debug: f,\r\n        error: f,\r\n        info: f\r\n    };\r\n}\r\n```\r\n\r\n### EncodeURI or EncodeURIComponent\r\n\r\nUnderstand the difference between `escape()` `encodeURI()` `encodeURIComponent()` [here](http://stackoverflow.com/a/3608791/1748884).\r\n\r\nRemember that using `encodeURI()` and `encodeURIComponent()` has exactly 11 characters difference.\r\nThese characters are: # $ & + , / : ; = ? @ [more discussion](http://stackoverflow.com/a/23842171/1748884).\r\n\r\n<h2 align=\"center\">\r\n <img src=\"http://i.imgur.com/rHWC1r1.png\" alt=\"encodeuri or encodeuricomponent\"/>\r\n</h2>\r\n\r\n### YOU MIGHT NOT NEED JQUERY\r\n\r\nAs the title said, [you might not need jquery](http://youmightnotneedjquery.com/). It's really useful if you are looking for some utilities code - [AJAX](http://youmightnotneedjquery.com/#AJAX) [EFFECTS](http://youmightnotneedjquery.com/#effects), [ELEMENTS](http://youmightnotneedjquery.com/#elements), [EVENTS](http://youmightnotneedjquery.com/#events), [UTILS](http://youmightnotneedjquery.com/#utils)\r\n\r\n### You Don't Need jQuery\r\n\r\n> Free yourself from the chains of jQuery by embracing and understanding the modern Web API and discovering various directed libraries to help you fill in the gaps.\r\n\r\n[http://blog.garstasio.com/you-dont-need-jquery/](http://blog.garstasio.com/you-dont-need-jquery/)\r\n\r\nUseful Tips\r\n\r\n1. [Selecting Elements](http://blog.garstasio.com/you-dont-need-jquery/selectors/)\r\n2. [DOM Manipulation](http://blog.garstasio.com/you-dont-need-jquery/dom-manipulation/)\r\n\r\n### Load Script with Callback\r\n\r\nIt's similar to [asynchrnous script loading](#asynchronous-syntax) with addition callback event\r\n\r\n```js\r\nfunction loadScript(url, callback) {\r\n  var script = document.createElement('script');\r\n  script.async = true;\r\n  script.src = url;\r\n\r\n  var entry = document.getElementsByTagName('script')[0];\r\n  entry.parentNode.insertBefore(script, entry);\r\n\r\n  script.onload = script.onreadystatechange = function () {\r\n    var rdyState = script.readyState;\r\n\r\n    if (!rdyState || /complete|loaded/.test(script.readyState)) {\r\n      callback();\r\n\r\n      // detach the event handler to avoid memory leaks in IE (http://mng.bz/W8fx)\r\n      script.onload = null;\r\n      script.onreadystatechange = null;\r\n    }\r\n  };\r\n}\r\n```\r\n\r\n### Once Function\r\n\r\nImplementation of the function `once`\r\n\r\n> Every so often you have a function which you only want to run once.  Oftentimes these functions are in the form of event listeners which may be difficult to manage.  Of course if they were easy to manage, you'd just remove the listeners but that's a perfect world and sometimes you simply want the ability to only allow a function to be called once.  Here's the JavaScript function to make that possible!\r\n\r\n```js\r\n// Copy from DWB\r\n// http://davidwalsh.name/javascript-once\r\nfunction once(fn, context) { \r\n\tvar result;\r\n\r\n\treturn function() { \r\n\t\tif(fn) {\r\n\t\t\tresult = fn.apply(context || this, arguments);\r\n\t\t\tfn = null;\r\n\t\t}\r\n\r\n\t\treturn result;\r\n\t};\r\n}\r\n\r\n// Usage\r\nvar canOnlyFireOnce = once(function() {\r\n\tconsole.log('Fired!');\r\n});\r\n\r\ncanOnlyFireOnce(); // \"Fired!\"\r\ncanOnlyFireOnce(); // nada\r\n```\r\n\r\n### Pixel Ratio Density\r\n\r\nIf you stuck on the term pixel, ratio, density, dimension, what while developing mobile web, try understanding the video, it may help.\r\n\r\n[Device pixel ratio - Mobile Web Development](https://www.youtube.com/watch?v=u0rfDeaxehc) <br/>\r\n[Mobile device pixels - Mobile Web Development](https://www.youtube.com/watch?t=34&v=UUF4jD-xoYc)\r\n\r\n### Get Style Value\r\n\r\n**Get inline-style value**\r\n\r\n```html\r\n<span id=\"black\" style=\"color: black\"> This is black color span </span>\r\n<script>\r\n    document.getElementById('black').style.color; // => black\r\n</script>\r\n```\r\n\r\n**Get Real style value**\r\n\r\n```html\r\n<style>\r\n#black {\r\n    color: red !important;\r\n}\r\n</style>\r\n\r\n<span id=\"black\" style=\"color: black\"> This is black color span </span>\r\n\r\n<script>\r\n    document.getElementById('black').style.color; // => black\r\n    \r\n    // real\r\n    var black = document.getElementById('black');\r\n    window.getComputedStyle(black, null).getPropertyValue('color'); // => rgb(255, 0, 0)\r\n</script>\r\n```\r\n\r\nref: [https://developer.mozilla.org/en-US/docs/Web/API/Window/getComputedStyle](https://developer.mozilla.org/en-US/docs/Web/API/Window/getComputedStyle)\r\n\r\n### Check if Element in Viewport\r\n\r\nYou can find out more [here](http://stackoverflow.com/questions/123999/how-to-tell-if-a-dom-element-is-visible-in-the-current-viewport/7557433#7557433).\r\n\r\n```js\r\nfunction isElementInViewport (el) {\r\n\r\n    //special bonus for those using jQuery\r\n    if (typeof jQuery === \"function\" && el instanceof jQuery) {\r\n        el = el[0];\r\n    }\r\n\r\n    var rect = el.getBoundingClientRect();\r\n\r\n    return (\r\n        rect.top >= 0 &&\r\n        rect.left >= 0 &&\r\n        rect.bottom <= (window.innerHeight || document.documentElement.clientHeight) && /*or $(window).height() */\r\n        rect.right <= (window.innerWidth || document.documentElement.clientWidth) /*or $(window).width() */\r\n    );\r\n}\r\n```\r\n\r\n### Check if Element is Visible\r\n\r\n```js\r\nvar isVisible: function(b) {\r\n    var a = window.getComputedStyle(b);\r\n    return 0 === a.getPropertyValue(\"opacity\") || \"none\" === a.getPropertyValue(\"display\") || \"hidden\" === a.getPropertyValue(\"visibility\") || 0 === parseInt(b.style.opacity, 10) || \"none\" === b.style.display || \"hidden\" === b.style.visibility ? false : true;\r\n}\r\n\r\nvar element = document.getElementById('box');\r\nisVisible(element); // => false or true\r\n```\r\n\r\n### Get Viewport Size\r\n\r\n```js\r\nvar getViewportSize = function() {\r\n    try {\r\n        var doc = top.document.documentElement\r\n          , g = (e = top.document.body) && top.document.clientWidth && top.document.clientHeight;\r\n    } catch (e) {\r\n        var doc = document.documentElement\r\n          , g = (e = document.body) && document.clientWidth && document.clientHeight;\r\n    }\r\n    var vp = [];\r\n    doc && doc.clientWidth && doc.clientHeight && (\"CSS1Compat\" === document.compatMode || !g) ? vp = [doc.clientWidth, doc.clientHeight] : g && (vp = [doc.clientWidth, doc.clientHeight]);\r\n    return vp;\r\n}\r\n\r\n// return as rray [viewport_width, viewport_height]\r\n```\r\n\r\n## WTF\r\n\r\n### Misspelling Of Referrer\r\n\r\nDo you know that why the HTTP Request Header having the field name `referer` not `referrer`\r\n\r\n_According to the [Wikipedia](https://en.wikipedia.org/wiki/HTTP_referer#Etymology)_\r\n\r\n> The `misspelling of referrer` originated in the original proposal by computer scientist `Phillip Hallam-Baker` to incorporate the field into the HTTP specification. The misspelling was set in stone by the time of its incorporation into the `Request for Comments` standards document `RFC 1945`; document co-author `Roy Fielding` has remarked that neither \"referrer\" nor the misspelling \"referer\" were recognized by the standard `Unix spell checker` of the period. \"Referer\" has since become a widely used spelling in the industry when discussing HTTP referrers; usage of the misspelling is not universal, though, as the correct spelling \"referrer\" is used in some web specifications such as the `Document Object Model`.\r\n\r\n<h2 align=\"center\">\r\n    <img src=\"https://cloud.githubusercontent.com/assets/2560096/12190613/96a7d652-b605-11e5-8109-1c6fefa9dfc4.png\"/>\r\n</h2>\r\n\r\n## Template\r\n\r\nSomeone asks for the template/boilerplate of the SDK, here some examples for you. [TEMPLATE.md](https://github.com/huei90/JavaScript-sdk-design/blob/master/Template/README.md)\r\n\r\n## Book/Nice to Read\r\n\r\n1. [Third-Party JavaScript](http://thirdpartyjs.com)\r\n2. [JQuery Plugin](https://learn.jquery.com/plugins/)\r\n3. [LightningJS](https://github.com/olark/lightningjs)\r\n\r\n## Reference\r\n\r\n1. [What is Software Development Kit](http://www.webopedia.com/TERM/S/SDK.html)\r\n2. [A window.fetch JavaScript polyfill.](https://github.com/github/fetch)\r\n3. [POST Request](http://stackoverflow.com/questions/692196/post-request-JavaScript/25423688#25423688)\r\n4. [Semantic VersioningVersioning 2.0.0](http://semver.org)\r\n5. [HTTP API design guide extracted from work on the Heroku Platform API](https://github.com/interagent/http-api-design)\r\n6. [Understanding URIs](http://medialize.github.io/URI.js/about-uris.html)\r\n7. [URI Parsing with JavaScript](https://gist.github.com/jlong/2428561)\r\n8. [Modernizr: the feature detection library for HTML5/CSS3](http://modernizr.com)\r\n9. [HTML5 Web Storage](http://www.w3schools.com/html/html5_webstorage.asp)\r\n10. [Check if third-party cookies are enabled](http://stackoverflow.com/questions/3550790/check-if-third-party-cookies-are-enabled)\r\n11. [Introduction to Analytics.js - Universal Analytics Web Tracking](https://developers.google.com/analytics/devguides/collection/analyticsjs/)\r\n12. [Facebook Conversion Tracking Pixel](https://www.facebook.com/help/421433191260652)\r\n13. [What is the maximum length of a URL](http://www.boutell.com/newfaq/misc/urllength.html)\r\n14. [YOU MIGHT NOT NEED JQUERY](http://youmightnotneedjquery.com/)\r\n15. [What is a Polyfill?](https://remysharp.com/2010/10/08/what-is-a-polyfill)\r\n16. [Asynchronous and deferred JavaScript execution explained](http://peter.sh/experiments/asynchronous-and-deferred-javascript-execution-explained/)\r\n17. [generate random UUIDs](https://gist.github.com/jed/982883)\r\n18. [DOMContentLoaded and Load Event](http://stackoverflow.com/questions/2414750/difference-between-domcontentloaded-and-load-events)\r\n19. [Must See JavaScript Dev Tools That Put Other Dev Tools to Shame](https://medium.com/javascript-scene/must-see-javascript-dev-tools-that-put-other-dev-tools-to-shame-aca6d3e3d925)\r\n\r\n*(inspired by [http-api-design](https://github.com/interagent/http-api-design))*\r\n",
  "google": "UA-62313508-1",
  "note": "Don't delete this file! It's used internally to help with page regeneration."
}